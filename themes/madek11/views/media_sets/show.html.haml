%section#content_head
  .container_12.clearfix
    #page_head.grid_12
      .grid_3.alpha
        #set_info
          / TODO: move this into a helper
          %div.item_box_set
            %div.item_permission_set
              = display_permission_icon(@media_set)
            %div.thumb_box_set
              = tag :img, :src => @media_set.thumb_base64(:small_125)
          / %h3 Set
      .grid_6
        #set_meta
          - context = MetaContext.media_set
          = display_meta_data_for_context(@media_set, context)
      .grid_3.omega
        #set_actions
          - if @can_edit
            = display_edit_icon(@media_set, current_user)
            = display_delete_icon(@media_set, current_user)

%section#content_body
  %div.section_title
    Set Inhalt
    %span= "#{@media_set.media_entries.size} von #{@media_entries.total_entries} Medieneinträge sichtbar"
    = will_paginate @media_entries, :previous_label => _("Zurück"), :next_label => _("Weiter ")
  .clear
  .task_bar
    %ul
      %li
        %h4 Ausgewählte Medieneinträge bearbeiten:
      %li#number_selected
        Keine Medieneinträge ausgewählt
      %li#batch-edit-button
        = button_to _("Medieneinträge Editieren"), edit_multiple_media_entries_path, :method => :post, :id => "batch-edit"
      %li#batch-remove-button
        = button_to _("Aus Set Entfernen"), remove_multiple_media_set_media_entries_path(@media_set), :method => :delete, :id => "batch-remove"
      %li#batch-add-to-set
        = form_tag add_member_media_set_url(@media_set) do
          = select_tag "media_set_id", options_for_select([["Set Auswählen", ""]] + @editable_sets.collect {|set| [set.meta_data.get_value_for("title"), set.id]})
          = submit_tag "Hinzufügen"
    #selected_items
    :plain    
      <script type="text/x-jquery-tmpl" id="mini_thumbnails">
            <div class="${css_class}" id="me_${id}">
              <img id="${id}_close" src="/themes/madek11/images/icons/button_remove_action.png" style="display:none;" class="thumb_remove"/>
              <a href="/media_entries/${id}">
                <img src="${thumb_base64}">
              </a>
            </div>
      </script>
    
  #results
    = render :partial => "/media_entries/index"

:javascript
  $(document).ready(function () {
    var data = #{@info_to_json};
    var media_set_id = #{@media_set.id};
    var key = "media_sets/"+ media_set_id +"/media_entry_ids";

    checkSelected(media_set_id);
    listSelected(media_set_id, data);
    displayCount(key);
    
    // hide icons by default 
    $('.actions').hide();
    $(".item_box").live({
      mouseenter: function() {
        $(this).find('.actions').show();
       },
      mouseleave: function() {
        $(this).find('.actions').hide();
       }
     });
     
    // make thumbnails removable from the selected items bar
    $('#selected_items .thumb_mini').live("hover", function() {
        $(this).children('img.thumb_remove').toggle();
     });
  
    $('img.thumb_remove').live("click", function() {
      $(this).parents('.thumb_mini').remove();
      var id = $(this).attr("id").replace('_close', '');
      removeFromSelected(key, id);
    });
  
    $('.pagination a').live('ajax:success', function(xhr, response){
  		checkSelected(media_set_id);
  		$('.actions').hide();
  	});
	
    $("span.favorite_link a").live('ajax:complete', function(xhr, response){
      var media_entry_id = $(this).parent().attr("id").slice(4);
    	$("span#fav_" + media_entry_id).html(response.responseText);
    });
	
  	// hover functions for batch action buttons - highlight selected entries for which action is possible 
  	$("input#batch-edit").hover(
      function () {
        $('#selected_items .edit').css("background","#fff6cb");
      }, 
      function () {
        $('#selected_items .edit').css("background","white");
      }
    );
  
    $("input#batch-remove").hover(
      function () {
        $('#selected_items .edit_set').css("background","#fff6cb");
      }, 
      function () {
        $('#selected_items .edit_set').css("background","white");
      }
    );
      
    $(":checkbox").live("click", function(){
      var is_checked = $(this).is(":checked");
      var curr_value = $(this).val();
      var media_entry_ids = JSON.parse(sessionStorage.getItem(key));
    
      if(media_entry_ids == null) media_entry_ids = new Array();
    
      if(is_checked){
        media_entry_ids.push(curr_value);
        $(this).parents('.item_box').css('background', '#eeeeee');
      } else {
        var i = media_entry_ids.indexOf(curr_value);
        if(i > -1) media_entry_ids.splice(i, 1);
        $(this).parents('.item_box').css('background', 'white');
      }

      $.each(data, function(i, me) {
        if ((me.id == curr_value) && is_checked) {
          // insert into selected bar
          $('#selected_items').append($("#mini_thumbnails").tmpl(me));
        } else if (me.id == curr_value) {
          // remove from selected bar
          $('#selected_items #me_' + me.id).remove();
        }
      });
    
      sessionStorage.setItem(key, JSON.stringify(media_entry_ids.getUnique()));
      displayCount(key);
    });

    $("#batch-edit-button form").submit(function() {
      //var media_entry_ids = JSON.parse(sessionStorage.getItem(key));
      var editable_ids = new Array();
      $("#selected_items .edit").each(function(i, elem){
        editable_ids.push($(this).attr("id").slice(3));
      });
      $(this).append("<input type='hidden' name='media_entry_ids' value='"+editable_ids+"'>");
    });
  
    $("#batch-remove-button form").submit(function() {
      //var media_entry_ids = JSON.parse(sessionStorage.getItem(key));
      var editable_ids = new Array();
      $("#selected_items .edit_set").each(function(i, elem){
        editable_ids.push($(this).attr("id").slice(3));
      });
      $(this).append("<input type='hidden' name='media_entry_ids' value='"+editable_ids+"'>");
      sessionStorage.removeItem(key); //maybe we just want to remove the items slated for removal (rather than the entire key)
    });
  
     $("#batch-add-to-set form").submit(function() {
       var media_entry_ids = JSON.parse(sessionStorage.getItem(key));
       $(this).append("<input type='hidden' name='media_entry_ids' value='"+media_entry_ids+"'>");
     });
    
  });

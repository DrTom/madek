%script{:type => "text/x-jquery-tmpl", :id => "pagination"}
  .pagination
    ${total_entries} ${pagination_label},
    Seite ${current_page} von ${total_pages}
  .clear

%script{:type => "text/x-jquery-tmpl", :id => "index"}
  %div.item_box{:id => "thumb_${id}"}
    %div.item_permission
      {{if is_public}}
      = image_tag("icons/button_status_private.png")
      {{else is_private}}
      = image_tag("icons/icon_button_perm.png")
      {{/if}}
    {{if is_set}}
    %a{:href => "/media_sets/${id}"}
      %div.thumb_box_set
        %img{:src => "${thumb_base64}"}
    {{else}}
    %a{:href => "/media_entries/${id}"}
      %div.thumb_box
        %img{:src => "${thumb_base64}"}
    {{/if}}
    %p.item_title
      ${title.substring(0,50)}
    %p.item_author
      ${author.substring(0,50)}
    .actions
      {{if !is_set}}
      .action_left
        //tmp// %span.check_box.off
        //tmp//  = image_tag("icons/button_checkbox_off.png", :alt => _("Auswählen"))
        %span.favorite_link{:id => "fav_${id}", :title => "Favorit"}
          %a{:href => "/media_entries/${id}/toggle_favorites", :"data-remote" => true, :"data-type" => "html", :"data-method" => :post}
            {{if is_favorite}}
            = image_tag("icons/button_favorit_on.png")
            {{else}}
            = image_tag("icons/button_favorit_off.png")
            {{/if}}
      {{/if}}
      .action_right
        {{if is_editable}}
        %a{:href => "/${url_stub}/${id}/edit", :title => "Editieren"}
          = image_tag("icons/button_edit_active.png")
        {{else}}
        = image_tag("icons/button_edit_inactive.png")
        {{/if}}
        {{if is_manageable}}
        %a{:href => "/${url_stub}/${id}", :title => "Löschen", :class => "delete_me", :"data-method" => :delete, :"data-remote" => true, :"data-type" => 'json', :"data-confirm" => "Sind Sie sicher?"}
          = image_tag("icons/button_delete_active.png")
        {{else}}
        = image_tag("icons/button_delete_inactive.png")
        {{/if}}

%section#content_body
  .page_title_left
    =_("Suchergebnisse")
    #term
      = "für “#{params[:query]}”"
  .clear
  - if [@media_entries[:entries], @media_sets[:entries], @projects[:entries]].all? {|x| x.nil? }
    = "Ihre Suche nach “#{params[:query]}” hat keine Resultate ergeben."
  - else 
    #detail_specification.tabs
      %ul
        %li
          = link_to "Medieneinträge (#{@paginated_media_entry_ids.total_entries})", "#media_entry_tab"
        %li
          = link_to "Sets (#{@paginated_media_set_ids.total_entries})", "#set_tab" 
        %li
          = link_to "Projekte (#{@paginated_project_ids.total_entries})", "#project_tab"
      #media_entry_tab.clearfix 
        .filter_area
          = render :partial => 'filter_form', :locals => {:filter => @media_entry_filter, :media => @_media_entry_ids, :type => "MediaEntry" }
        %div{:id => "media_entry_results", :class => "result_area" }
          = render :partial => 'results', :locals => { :type => "media_entry", :json => @media_entries.to_json }
      #set_tab.clearfix   
        .filter_area
          = render :partial => 'filter_form', :locals => {:filter => @media_set_filter, :media => @_media_set_ids, :type => "Media::Set" }
        %div{:id => "set_results", :class => "result_area" }
          = render :partial => 'results', :locals => { :type => "set", :json => @media_sets.to_json }
      #project_tab.clearfix  
        .filter_area
          = render :partial => 'filter_form', :locals => {:filter => @project_filter, :media => @_media_project_ids, :type => "Media::Set" }
        %div{:id => "project_results", :class => "result_area" }
          = render :partial => 'results', :locals => { :type => "project",  :json => @projects.to_json }


= javascript_include_tag "batch_actions"

:javascript
  $(document).ready(function () { 
    var t = $('#detail_specification').tabs();
    var active_bookmark = '#{@active_bookmark}';
    if (active_bookmark != '') t.tabs('select', active_bookmark);
    
    $('.filter_box h3.filter_category a.filter_category_link').click(function() {
      var icon = $(this).siblings('span.ui-icon');
      var to_toggle = $(this).parent().next('.filter_content');

    	to_toggle.toggle();
    	if (to_toggle.is(":visible")) {
    	  icon.removeClass('ui-icon-triangle-1-e').addClass('ui-icon-triangle-1-s');
    	} else {
    	  icon.removeClass('ui-icon-triangle-1-s').addClass('ui-icon-triangle-1-e');
    	};
    	return false;
    });

    var checkboxes = $(".filter_content input[name='filter_ids[]']:checkbox");
    checkboxes.each(function(){
      var that = $(this);
      that.data('item_ids', that.val().split(','));
    });
    checkboxes.change(function(){
      var intersected_ids;
      checkboxes.filter(":checked").each(function(i, elem){
        var a = $(elem).data('item_ids');
        intersected_ids = (i ? intersected_ids.intersect(a) : a );
      });
      checkboxes.each(function(){
        var that = $(this);
        var a = that.data('item_ids');
        if(intersected_ids) a = intersected_ids.intersect(a);
        that.next(".total_ids").html(a.length);
        if(a.length){
          //that.closest("li").show();
          that.closest("li").removeClass("disabled");
          that.removeAttr("disabled");
        }else{
          //that.closest("li").hide();
          that.closest("li").addClass("disabled");
          that.attr("disabled", "disabled");
        }
      });
    });
    
    /* TODO
    $( "#slider-range" ).slider({
      range: true,
      min: 0,
      max: 500,
      values: [ 75, 300 ],
      slide: function( event, ui ) {
      }
    });
    */
  });

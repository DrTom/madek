h = {id: @media_resource.id}

## IMAGE
if params[:with] and params[:with][:image]
  size = params[:with][:image][:size] || :small
  
  h["image"] = case params[:with][:image][:as]
    when "base64"
      mf = if @media_resource.is_a?(MediaSet)
            @media_resource.media_entries.accessible_by_user(current_user).order("media_resources.updated_at DESC").first.try(:media_file)
           else
            @media_resource.media_file
           end
      mf ? mf.thumb_base64(size) : nil
    else # default return is a url to the image
      "/media_resources/%d/image?size=%s" % [id, size]
  end            
end

## META DATA
if params[:with] and params[:with][:meta_data]
  h["meta_data"] = []
  
  if meta_context_names = params[:with][:meta_data][:meta_context_names]
    meta_context_names.each do |name|
      @context = MetaContext.find_by_name(name)
      @media_resource.meta_data_for_context(@context).each do |md|
        @meta_datum = md
        h["meta_data"].push JSON.parse(render :template => "meta_data/show")
      end
    end
  end
end

## TYPE
if params[:with] and params[:with][:type]
  h["type"] = @media_resource.class.to_s.underscore
end

## MEDIATYPE
if params[:with] and params[:with][:media_type]
  h["media_type"] = @media_resource.media_type
end

## FILENAME
if params[:with] and params[:with][:filename]
  h["filename"] = @media_resource.is_a?(MediaSet) ? nil : @media_resource.media_file.filename
end

## 

h

:ruby
  original_file = media_entry.media_file
  x_large_file = media_entry.media_file.get_preview(:x_large)
  format_original_file = file_format_for(original_file)
  can_download = current_user.authorized?(:download, media_entry)
  x_large_file_available = x_large_file && File.exist?(x_large_file.full_path)

%table#download-table
  %tr
    %th= _("Version")
    %th= select_dimensions_header_for_entry(media_entry)
    %th= _("Grösse")
    %th= _("Download")

  - if x_large_file_available
    - unless original_file.content_type.match(/^video.*/)
      %tr.download-unit
        %td{:rowspan => 2}
          %p.download-info
            %span= _("Datei ohne Metadaten")
            = _("Originaldatei ohne eingeschriebene Metadaten.")
        %td.align-right= "#{dimensions_for(original_file)} (#{format_original_file})"
        %td.align-right
          \~
          = number_to_human_size(original_file.size)
        %td.align-right
          = link_to _("Download"), "/download?id=#{media_entry.id}&naked=1" if can_download
          =# render :partial => "download_links", :locals => {:download => can_download, :downlaod_type => "naked", :media_entry => media_entry}
      %tr
        - if x_large_file #and x_large_file.width < original_file.width  
          %td.align-right= "#{dimensions_for(x_large_file)} (jpeg)"
          %td.align-right
            \~
            = number_to_human_size(x_large_file.size)
          %td.align-right= link_to _("Download"), "/download?id=#{media_entry.id}&naked=1&size=x_large"
    
      %tr.download-unit
        %td{:rowspan => 2}
          %p.download-info
            %span= _("Datei mit aktuellen Metadaten")
            = _("Die aktuellen Metadaten aus dem Medienarchiv im Format XMP/IPTC sind direkt in die Datei eingeschrieben.")
        %td.align-right= "#{dimensions_for(original_file)} (#{format_original_file})"
        %td.align-right
          \~
          = number_to_human_size(original_file.size)
        %td.align-right
          = link_to _("Download"), "/download?id=#{media_entry.id}&update=1" if can_download
      %tr
        - if x_large_file #and x_large_file.width < original_file.width
          %td.align-right= "#{dimensions_for(x_large_file)} (jpeg)"
          %td.align-right
            \~
            = number_to_human_size(x_large_file.size)
          %td.align-right= link_to _("Download"), "/download?id=#{media_entry.id}&update=1&size=x_large"

      %tr.download-unit
        %td{:rowspan => 2}
          %p.download-info
            %span= _("ZIP-Verzeichnis mit Datei und separaten Metadaten")
            = _("Das gezippte Verzeichnis enthält die Datei mit eingeschriebenen, aktuellen Metadaten sowie einem separaten XML Metadatendokument") #old# " und YAML"
        %td.align-right= "#{dimensions_for(original_file)} (#{format_original_file})"
        %td.align-right
          \~
          = number_to_human_size(original_file.size)
        %td.align-right
          = link_to _("Download"), "/download?id=#{media_entry.id}&zip=1" if can_download
      %tr
        - if x_large_file #and x_large_file.width < original_file.width
          %td.align-right= "#{dimensions_for(x_large_file)} (jpeg)"
          %td.align-right
            \~
            = number_to_human_size(x_large_file.size)
          %td.align-right= link_to _("Download"), "/download?id=#{media_entry.id}&zip=1&size=x_large"

  - if File.exist?(original_file.file_storage_location) # NOTE it could be a zip file
    %tr.download-unit
      %td{:rowspan => 2}
        %p.download-info
          %span= _("Datei mit ursprünglichen Metadaten")
          = _("Originaldatei mit gleichen Metadaten wie beim Hochladen ins Medienarchiv")
      %td.align-right= "#{dimensions_for(original_file)} (#{format_original_file})" 
      %td.align-right
        \~
        = number_to_human_size(original_file.size)
      %td.align-right= link_to _("Download"),"/download?id=#{media_entry.id}" if can_download
    %tr
      - if x_large_file_available #old# x_large_file #and x_large_file.width < original_file.width  
        %td.align-right= "#{dimensions_for(x_large_file)} (jpeg)"
        %td.align-right
          \~
          = number_to_human_size(x_large_file.size)
        %td.align-right
          = link_to _("Download"),"/download?id=#{media_entry.id}&size=x_large"

  %tr.download-unit
    %td{:rowspan => 2}
      %p.download-info
        %span= _("ZIP-Verzeichnis mit Datei und TMS XML")
        = _("Das gezippte Verzeichnis enthält die Datei mit eingeschriebenen, aktuellen Metadaten sowie einem separaten TMS XML Metadatendokument")
    %td.align-right
      = "#{dimensions_for(original_file)} (#{format_original_file})"
    %td.align-right
      \~
      = number_to_human_size(original_file.size)
    %td.align-right
      = link_to _("Download"), "/download?id=#{media_entry.id}&type=tms&zip=1&update=1" if can_download
  %tr
    %td.align-right
      = "xml"
    %td.align-right
    %td.align-right
      = link_to _("Export"), "/download?id=#{media_entry.id}&type=tms"

-#old# else
  =#old# _("Die Dateien sind leider nicht zum Download vorhanden.")

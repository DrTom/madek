- @permissions = Permission.cached_permissions_by(@resource) #tmp# @resource.permissions

%table.permissions
  %tbody
    %tr
      %th
        Namen:
      %th{:colspan => 2}
        Berechtigungen:
      %th
    %tr
      %td
        %strong Personen
      %td
        Sehen
      %td
        Editieren
      - if @resource.is_a?(MediaEntry)
        %td
          Download volle Auflösung
  %tbody#user_permissions
    = render :partial => "/permissions/edit", :collection => @permissions.select{|x| x.subject_type == "User"}, :as => :permission
  %tbody
    %tr.adder
      %td{:colspan => 5}
        Person hinzufügen:
        %input#new_user
    %tr.adder
      %td{:colspan => 5}
        %p.hint
          Es können nur Personen ausgewählt werden, die sich schon einmal im Medienarchiv eingeloggt haben.
  %tbody
    %tr
      %td
        %strong Gruppen
      %td
        Sehen
      %td
        Editieren
      - if @resource.is_a?(MediaEntry)
        %td
          Download volle Auflösung
  %tbody#group_permissions
    = render :partial => "/permissions/edit", :collection => @permissions.select{|x| x.subject_type == "Group"}, :as => :permission
  %tbody
    %tr.adder
      %td{:colspan => 5}
        Gruppe hinzufügen:
        %input#new_group
  %tbody
    %tr
      %td
        %strong Allgemein
      %td
        Sehen
      %td
        Editieren
      - if @resource.is_a?(MediaEntry)
        %td
          Download volle Auflösung
  %tbody#anyone_permissions
    = render :partial => "/permissions/edit", :collection => @permissions.select{|x| x.subject_type.nil?}, :as => :permission

:javascript
  $(function() {
    function create_permission(data, type){
  		$.ajax({
  			url: '#{url_for([@resource, :permissions])}',
  			data: data,
  			type: "post",
  			success: function(response){
          $("input#new_"+type).val("");
          $(response).appendTo('tbody#'+type+'_permissions').effect('highlight');
  			}
  		});
    }

    $("input#new_user").autocomplete({
      source: "/users",
      minLength: 3,
      select: function(event, ui) {
        create_permission({user_id: ui.item.id}, 'user');
      }
    });
    
    $("input#new_group").autocomplete({
      source: "/groups",
      minLength: 3,
      select: function(event, ui) {
        create_permission({group_id: ui.item.id}, 'group');
      }
    });
    
    $("table.permissions input:checkbox").live('click', function(){
  		$.ajax({
  			url: $(this).attr("path"),
  			data: {checked: $(this).is(":checked")},
  			type: "put",
  			dataType: "script"
  		});
      $(this).siblings("input:checkbox").attr('checked', false);
    });
    
    $("table.permissions a[data-method='delete']").live('ajax:success', function(){
      $(this).closest("tr").fadeOut();
    });
  });
